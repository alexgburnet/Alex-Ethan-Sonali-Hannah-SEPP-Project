import React, { useState, useEffect } from 'react';
import { useLocation } from 'react-router-dom';
import ImageGallery from 'react-image-gallery';
import axios from 'axios';
import Cookies from 'js-cookie';

import API_URL from '../../config';

import CustomButton from '../../Components/CustomButton/CustomButton';
import SimilarProductCard from '../../Components/SimilarProductCard/SimilarProductCard';

import './Productpage.css';
import 'react-image-gallery/styles/css/image-gallery.css';
import { use } from 'react';

function ProductPage() {
    const location = useLocation();
    const { imgSource, itemName, itemDescription, price, productId } = location.state || ProductPage.defaultProps;

    const [quantity, setQuantity] = useState(1);
    const [error, setError] = useState(null);
    const [success, setSuccess] = useState(false);
    const [description, setDescription] = useState(itemDescription);

    const handleQuantityChange = (event) => {
        setQuantity(Number(event.target.value));
    };

    useEffect(() => {
        // pull description from backend
        const fetchDescription = async () => {
            try {
                const response = await axios.get(`${API_URL}/get_product_info?product_id=${productId}`);
                setDescription(response.data.description);
            } catch (error) {
                console.error('Error fetching description:', error);
                setDescription('Description not available.');
            }
        };

        fetchDescription();
    }, []);

    const handleAddToBasket = async () => {
        try {
            // Retrieve order_id from cookies or set it to -1 if not found
            let orderId = Cookies.get('order_id');
            if (!orderId) {
                orderId = '-1';
            }
            const userId = Cookies.get('user_id') || 'default'; // Assume user is logged in, and their ID is stored in cookies

            const data = {
                order_id: orderId,
                product_id: productId,  // Use the dynamically passed product ID from location.state
                quantity: quantity,  // The quantity selected by the user
                user_id: userId,  // The user ID
            };

            // Send the POST request with the data as JSON in the body
            const response = await axios.post(`${API_URL}/add_to_basket`, data, {
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            console.log('Response from backend:', response.data);

            if (response.data.success) {
                // If a new order_id was generated by the backend, save it to cookies
                if (response.data.new_order_id && response.data.new_order_id !== orderId) {
                    Cookies.set('order_id', response.data.new_order_id, { expires: 7 });
                    console.log(`New order_id set in cookies: ${response.data.new_order_id}`);
                }
                setSuccess(true);
            } else {
                setError(response.data.error);
            }
        } catch (error) {
            console.error('Error adding to basket:', error);
            setError('An error occurred while adding to the basket.');
        }
    };

    const images = [
        {
            original: imgSource,
        },
    ];

    const cardsdisplayed = [];
    for (let i = 0; i < 10; i++) {
        cardsdisplayed.push(<SimilarProductCard key={i} />);
    }

    return (
        <div className="product-page">
            <div className='product-container'>
                <div className='image-container'>
                    <ImageGallery
                        items={images}
                        showPlayButton={false}
                        showFullscreenButton={false}
                    />
                </div>

                <div className='product-info-container'>
                    <h1>{itemName}</h1>
                    <p>${price}</p>

                    <hr></hr>

                    <div className='quantity-container'>
                        <h3>Quantity</h3>
                        <input
                            type='number'
                            min='1'
                            max='10'
                            value={quantity}
                            onChange={handleQuantityChange}
                        />
                    </div>

                    <hr></hr>

                    <CustomButton
                        text='Add to cart'
                        onClick={handleAddToBasket}
                    />

                    {error && <p className="error">{error}</p>}
                    {success && <p>Item added to basket successfully!</p>}

                    <p>{description}</p>
                </div>
            </div>

            <div className='similar-products'>
                <div className='title-container'>
                    <h3>You may also like:</h3>
                </div>
                <div className='similar-products-container'>
                    {cardsdisplayed}
                </div>
            </div>
        </div>
    );
}

ProductPage.defaultProps = {
    imgSource: "https://via.placeholder.com/150",
    itemName: "Item Name",
    itemDescription: "Item Description",
    price: "0.00",
    id: "default-product-id"
}

export default ProductPage;